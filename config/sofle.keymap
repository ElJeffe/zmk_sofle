/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC           &kp N1  &kp N2       &kp N3          &kp N4          &kp N5                             &kp N6  &kp N7           &kp N8            &kp N9             &kp N0    &kp BACKSLASH
&kp TAB           &kp Q   &kp W        &kp E           &kp R           &kp T                              &kp Y   &kp U            &kp I             &kp O              &kp P     &kp MINUS
&kp LEFT_SHIFT    &kp A   &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G                              &kp H   &mt RIGHT_GUI J  &mt RIGHT_ALT K   &mt RCTRL L        &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X        &kp C           &kp V           &kp B   &mo 3        &kp K_MUTE    &kp N   &kp M            &kp COMMA         &kp DOT            &kp FSLH  &kp RSHFT
                          &kp LGUI     &kp LALT        &kp LEFT_SHIFT  &mo 1   &kp SPACE    &kp KP_ENTER  &to 2   &kp BACKSPACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        L1_nav {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp TILDE  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                           &kp F6    &kp F7         &kp F8       &kp F9     &kp F10   &kp F11
&trans     &kp LG(F1)  &kp LG(F2)  &kp LG(F3)  &kp LG(F4)  &kp LG(N5)                       &none     &none          &none        &none      &none     &kp F12
&trans     &none       &none       &none       &none       &none                            &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp PLUS  &kp EQUAL
&trans     &none       &none       &none       &none       &none       &trans    &kp ENTER  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none     &none
                       &trans      &trans      &trans      &trans      &trans    &trans     &trans    &kp DELETE     &trans       &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp UP DOWN>;
        };

        L2_num {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans         &trans  &trans     &trans  &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp N7  &kp N8         &kp N9  &kp MINUS  &trans  &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp N4  &kp N5         &kp N6  &kp COMMA  &none   &none
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &kp N1  &kp N2         &kp N3  &kp DOT    &trans  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &kp BACKSPACE  &kp N0  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
